{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://box/../src/core/version.ts","webpack://box/../src/core/storage/DOMStorageWrapper.ts","webpack://box/../src/core/storage/MemoryStorage.ts","webpack://box/../src/core/storage/storage.ts","webpack://box/../src/core/util/util.ts","webpack://box/../src/core/AppCheckTokenProvider.ts","webpack://box/../src/core/AuthTokenProvider.ts","webpack://box/../src/realtime/Constants.ts","webpack://box/../src/core/RepoInfo.ts","webpack://box/../src/core/stats/StatsCollection.ts","webpack://box/../src/core/stats/StatsManager.ts","webpack://box/../src/realtime/polling/PacketReceiver.ts","webpack://box/../src/realtime/BrowserPollConnection.ts","webpack://box/../src/realtime/WebSocketConnection.ts","webpack://box/../src/realtime/TransportManager.ts","webpack://box/../src/realtime/Connection.ts","webpack://box/../src/core/ServerActions.ts","webpack://box/../src/core/util/EventEmitter.ts","webpack://box/../src/core/util/OnlineMonitor.ts","webpack://box/../src/core/util/Path.ts","webpack://box/../src/core/util/VisibilityMonitor.ts","webpack://box/../src/core/PersistentConnection.ts","webpack://box/../src/core/snap/Node.ts","webpack://box/../src/core/snap/indexes/Index.ts","webpack://box/../src/core/snap/indexes/KeyIndex.ts","webpack://box/../src/core/util/SortedMap.ts","webpack://box/../src/core/snap/comparators.ts","webpack://box/../src/core/snap/snap.ts","webpack://box/../src/core/snap/LeafNode.ts","webpack://box/../src/core/snap/indexes/PriorityIndex.ts","webpack://box/../src/core/snap/childSet.ts","webpack://box/../src/core/snap/IndexMap.ts","webpack://box/../src/core/snap/ChildrenNode.ts","webpack://box/../src/core/snap/nodeFromJSON.ts","webpack://box/../src/core/snap/indexes/PathIndex.ts","webpack://box/../src/core/snap/indexes/ValueIndex.ts","webpack://box/../src/core/view/Change.ts","webpack://box/../src/core/view/filter/IndexedFilter.ts","webpack://box/../src/core/view/filter/RangedFilter.ts","webpack://box/../src/core/view/filter/LimitedFilter.ts","webpack://box/../src/core/view/QueryParams.ts","webpack://box/../src/core/ReadonlyRestClient.ts","webpack://box/../src/core/SnapshotHolder.ts","webpack://box/../src/core/SparseSnapshotTree.ts","webpack://box/../src/core/stats/StatsListener.ts","webpack://box/../src/core/stats/StatsReporter.ts","webpack://box/../src/core/operation/Operation.ts","webpack://box/../src/core/operation/AckUserWrite.ts","webpack://box/../src/core/operation/ListenComplete.ts","webpack://box/../src/core/operation/Overwrite.ts","webpack://box/../src/core/operation/Merge.ts","webpack://box/../src/core/view/CacheNode.ts","webpack://box/../src/core/view/EventGenerator.ts","webpack://box/../src/core/view/ViewCache.ts","webpack://box/../src/core/util/ImmutableTree.ts","webpack://box/../src/core/CompoundWrite.ts","webpack://box/../src/core/WriteTree.ts","webpack://box/../src/core/view/ChildChangeAccumulator.ts","webpack://box/../src/core/view/CompleteChildSource.ts","webpack://box/../src/core/view/ViewProcessor.ts","webpack://box/../src/core/view/View.ts","webpack://box/../src/core/SyncPoint.ts","webpack://box/../src/core/SyncTree.ts","webpack://box/../src/core/util/ServerValues.ts","webpack://box/../src/core/util/Tree.ts","webpack://box/../src/core/util/validation.ts","webpack://box/../src/core/view/EventQueue.ts","webpack://box/../src/core/Repo.ts","webpack://box/../src/core/util/libs/parser.ts","webpack://box/../src/core/util/NextPushId.ts","webpack://box/../src/core/view/Event.ts","webpack://box/../src/core/view/EventRegistration.ts","webpack://box/../src/api/OnDisconnect.ts","webpack://box/../src/api/Reference_impl.ts","webpack://box/../src/api/Database.ts","webpack://box/../src/register.ts","webpack://box/../src/api/ServerValue.ts","webpack://box/../src/api/Transaction.ts","webpack://box/../src/api/test_access.ts","webpack://box/../src/internal/index.ts","webpack://box/../src/index.ts","webpack://box/../src/constants.ts","webpack://box/../src/assert.ts","webpack://box/../src/crypt.ts","webpack://box/../src/deepCopy.ts","webpack://box/../src/global.ts","webpack://box/../src/defaults.ts","webpack://box/../src/deferred.ts","webpack://box/../src/emulator.ts","webpack://box/../src/environment.ts","webpack://box/../src/errors.ts","webpack://box/../src/json.ts","webpack://box/../src/jwt.ts","webpack://box/../src/obj.ts","webpack://box/../src/promise.ts","webpack://box/../src/query.ts","webpack://box/../src/sha1.ts","webpack://box/../src/subscribe.ts","webpack://box/../src/validation.ts","webpack://box/../src/utf8.ts","webpack://box/../src/uuid.ts","webpack://box/../src/exponential_backoff.ts","webpack://box/../src/formatters.ts","webpack://box/../src/compat.ts","webpack://box/./src/script.js","webpack://box/./src/styles.css?1553","webpack://box/../../src/platformLoggerService.ts","webpack://box/../../src/logger.ts","webpack://box/../../src/constants.ts","webpack://box/../../src/internal.ts","webpack://box/../../src/errors.ts","webpack://box/../../src/firebaseApp.ts","webpack://box/../../src/firebaseServerApp.ts","webpack://box/../../src/api.ts","webpack://box/../../src/indexeddb.ts","webpack://box/../../src/heartbeatService.ts","webpack://box/../../src/registerCoreComponents.ts","webpack://box/../../src/index.ts","webpack://box/../../src/component.ts","webpack://box/../../src/provider.ts","webpack://box/../../src/component_container.ts","webpack://box/../../index.ts","webpack://box/./node_modules/idb/build/index.js","webpack://box/./node_modules/idb/build/wrap-idb-value.js","webpack://box/webpack/bootstrap","webpack://box/webpack/runtime/define property getters","webpack://box/webpack/runtime/global","webpack://box/webpack/runtime/hasOwnProperty shorthand","webpack://box/webpack/runtime/make namespace object","webpack://box/./src/index.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a JavaScript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in keys, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are received from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap will be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whether the tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexicographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `IteratedDataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: IteratedDataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n * Represents a child snapshot of a `Reference` that is being iterated over. The key will never be undefined.\n */\nexport interface IteratedDataSnapshot extends DataSnapshot {\n  key: string; // key of the location of this snapshot.\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thenablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thenablePushRef.then = promise.then.bind(promise);\n  thenablePushRef.catch = promise.then.bind(promise, undefined);\n  return thenablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type = 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type = 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type = 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type = 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type = 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type = 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type = 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type = 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type = 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type = 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type = 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated with the provided\n * {@link @firebase/app#FirebaseApp}. Initializes a new instance with default settings if\n * no instance exists or if the existing instance uses a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppCheckInternal,\n  AppCheckInternalComponentName\n} from '@firebase/app-check-interop-types';\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  Provider\n} from '@firebase/component';\n\nimport { Database } from '../api.standalone';\nimport { repoManagerDatabaseFromApp } from '../api/Database';\nimport { setSDKVersion } from '../core/version';\n\n/**\n * Used by console to create a database based on the app,\n * passed database URL and a custom auth implementation.\n * @internal\n * @param app - A valid FirebaseApp-like object\n * @param url - A valid Firebase databaseURL\n * @param version - custom version e.g. firebase-admin version\n * @param customAppCheckImpl - custom app check implementation\n * @param customAuthImpl - custom auth implementation\n */\nexport function _initStandalone({\n  app,\n  url,\n  version,\n  customAuthImpl,\n  customAppCheckImpl,\n  nodeAdmin = false\n}: {\n  app: FirebaseApp;\n  url: string;\n  version: string;\n  customAuthImpl: FirebaseAuthInternal;\n  customAppCheckImpl?: FirebaseAppCheckInternal;\n  nodeAdmin?: boolean;\n}): Database {\n  setSDKVersion(version);\n\n  /**\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\n   * any actual function.\n   */\n  const componentContainer = new ComponentContainer('database-standalone');\n  const authProvider = new Provider<FirebaseAuthInternalName>(\n    'auth-internal',\n    componentContainer\n  );\n  let appCheckProvider: Provider<AppCheckInternalComponentName>;\n  if (customAppCheckImpl) {\n    appCheckProvider = new Provider<AppCheckInternalComponentName>(\n      'app-check-internal',\n      componentContainer\n    );\n    appCheckProvider.setComponent(\n      new Component(\n        'app-check-internal',\n        () => customAppCheckImpl,\n        ComponentType.PRIVATE\n      )\n    );\n  }\n  authProvider.setComponent(\n    new Component('auth-internal', () => customAuthImpl, ComponentType.PRIVATE)\n  );\n\n  return repoManagerDatabaseFromApp(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    nodeAdmin\n  );\n}\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Type placeholder for `WorkerGlobalScope` from `webworker`\n */\ndeclare class WorkerGlobalScope {}\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment.\n * Note: This will return true for certain test frameworks that are incompletely\n * mimicking a browser, and should not lead to assuming all browser APIs are\n * available.\n */\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' || isWebWorker();\n}\n\n/**\n * Detect Web Worker context.\n */\nexport function isWebWorker(): boolean {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    typeof self !== 'undefined' &&\n    self instanceof WorkerGlobalScope\n  );\n}\n\n/**\n * Detect Cloudflare Worker context.\n */\nexport function isCloudflareWorker(): boolean {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.userAgent === 'Cloudflare-Workers'\n  );\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // TypeScript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n    //                   which we can now use since we no longer target ES5.\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data JavaScript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber synchronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in JavaScript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","//---------탭 관련 시작 ---------\r\n\r\n// 탭 전환 기능\r\ndocument.getElementById('searchTab').addEventListener('click', function() {\r\n    activateTab('searchSection');\r\n});\r\n\r\ndocument.getElementById('inputTab').addEventListener('click', function() {\r\n    activateTab('inputSection');\r\n});\r\n\r\ndocument.getElementById('allStockTab').addEventListener('click', function() {\r\n    activateTab('allStockSection');\r\n});\r\n\r\n// 탭 활성화 함수\r\nfunction activateTab(sectionId) {\r\n    // 모든 섹션 숨기기\r\n    const sections = document.querySelectorAll('.section');\r\n    sections.forEach(section => {\r\n        section.classList.remove('active');\r\n    });\r\n\r\n    // 모든 탭 비활성화\r\n    const tabs = document.querySelectorAll('.tab-button');\r\n    tabs.forEach(tab => {\r\n        tab.classList.remove('active');\r\n    });\r\n\r\n    // 해당 섹션 활성화\r\n    document.getElementById(sectionId).classList.add('active');\r\n\r\n    // 해당 탭 활성화\r\n    const activeTab = document.getElementById(sectionId.replace('Section', 'Tab'));\r\n    activeTab.classList.add('active');\r\n}\r\n//----------------탭 관련 끝 ---------\r\n\r\n//영어->한글로 번역해서 출력\r\n\r\nconst convertToKorean = (name) => {\r\n    const conversionMap = {\r\n        \"pedro_ivory\": \"페드로 아이보리\",\r\n        \"pedro_gray\": \"페드로 그레이\",\r\n        \"pedro_blue\": \"페드로 블루\",\r\n        \"basic\": \"기본형\",\r\n        \"winged\": \"날개형\",\r\n        \"finished\": \"완제품\",\r\n        \"fabric\": \"원단\"\r\n    };\r\n    return conversionMap[name] || name;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//---------- 섹션 1 (제품검색) ----------\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, query, orderByKey, startAt, endAt, onValue } from \"firebase/database\";\r\n\r\n// Firebase 설정\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCviaYW79vbuEzyLGlVP5OK8irS_yVHmxk\",\r\n    authDomain: \"nameage-ec0a2.firebaseapp.com\",\r\n   databaseURL: \"https://nameage-ec0a2-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n   projectId: \"nameage-ec0a2\",\r\n    storageBucket: \"nameage-ec0a2.firebasestorage.app\",\r\n   messagingSenderId: \"72793368901\",\r\n   appId: \"1:72793368901:web:55e93af625bf0c9193362c\"\r\n};\r\n\r\n// Firebase 초기화\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getDatabase(app);\r\n\r\n// 검색 버튼 클릭 시\r\ndocument.getElementById('searchBtn').addEventListener('click', function() {\r\n    const searchTerm = document.getElementById('searchInput').value.trim().toLowerCase();\r\n    if (searchTerm) {\r\n        searchProducts(searchTerm);\r\n    }\r\n});\r\n\r\n// 제품 검색 기능\r\nfunction searchProducts(searchTerm) {\r\n    // Firebase에서 검색어에 맞는 데이터를 가져오기 위한 쿼리 작성\r\n    const productsRef = ref(db, 'stocks');\r\n    const productQuery = query(productsRef);\r\n\r\n    onValue(productQuery, (snapshot) => {\r\n        const data = snapshot.val();\r\n        const filteredProducts = [];\r\n\r\n        // 데이터 필터링: 검색어가 포함된 제품 찾기\r\n        for (const product in data) {\r\n            if (product.toLowerCase().includes(searchTerm)) {  // 대소문자 구분 없이 검색\r\n                filteredProducts.push(data[product]);\r\n            }\r\n        }\r\n\r\n        // 테이블에 검색 결과 표시\r\n        updateSearchTable(filteredProducts);\r\n    });\r\n}\r\n\r\n// 검색 결과 테이블 업데이트\r\nfunction updateSearchTable(products) {\r\n    const tableBody = document.getElementById('searchResults').querySelector('tbody');\r\n    tableBody.innerHTML = ''; // 기존 결과 삭제\r\n\r\n    if (products.length === 0) {\r\n        const noResultsRow = tableBody.insertRow();\r\n        const cell = noResultsRow.insertCell(0);\r\n        cell.colSpan = 5;\r\n        cell.textContent = \"검색 결과가 없습니다.\";\r\n        return;\r\n    }\r\n\r\n    // 검색된 제품 목록을 테이블에 추가\r\n    products.forEach(product => {\r\n        for (const size in product) {\r\n            for (const type in product[size]) {\r\n                const stockItem = product[size][type];\r\n                const row = tableBody.insertRow();\r\n                row.innerHTML = `\r\n                    <td>${convertToKorean(product)}</td>\r\n                    <td>${convertToKorean(size)}</td>\r\n                    <td>${convertToKorean(type)}</td>\r\n                    <td>${stockItem.stockAmount}</td>\r\n                    <td>${stockItem.neededAmount}</td>\r\n                `;\r\n            }\r\n        }\r\n    });\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as dataconnectName } from '../../../packages/data-connect/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [dataconnectName]: 'fire-data-connect',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseAppSettings,\n  FirebaseServerApp,\n  FirebaseServerAppSettings,\n  FirebaseOptions\n} from './public-types';\nimport { deleteApp, registerVersion } from './api';\nimport { ComponentContainer } from '@firebase/component';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { name as packageName, version } from '../package.json';\n\nexport class FirebaseServerAppImpl\n  extends FirebaseAppImpl\n  implements FirebaseServerApp\n{\n  private readonly _serverConfig: FirebaseServerAppSettings;\n  private _finalizationRegistry: FinalizationRegistry<object> | null;\n  private _refCount: number;\n\n  constructor(\n    options: FirebaseOptions | FirebaseAppImpl,\n    serverConfig: FirebaseServerAppSettings,\n    name: string,\n    container: ComponentContainer\n  ) {\n    // Build configuration parameters for the FirebaseAppImpl base class.\n    const automaticDataCollectionEnabled =\n      serverConfig.automaticDataCollectionEnabled !== undefined\n        ? serverConfig.automaticDataCollectionEnabled\n        : false;\n\n    // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n    const config: Required<FirebaseAppSettings> = {\n      name,\n      automaticDataCollectionEnabled\n    };\n\n    if ((options as FirebaseOptions).apiKey !== undefined) {\n      // Construct the parent FirebaseAppImp object.\n      super(options as FirebaseOptions, config, container);\n    } else {\n      const appImpl: FirebaseAppImpl = options as FirebaseAppImpl;\n      super(appImpl.options, config, container);\n    }\n\n    // Now construct the data for the FirebaseServerAppImpl.\n    this._serverConfig = {\n      automaticDataCollectionEnabled,\n      ...serverConfig\n    };\n\n    this._finalizationRegistry = null;\n    if (typeof FinalizationRegistry !== 'undefined') {\n      this._finalizationRegistry = new FinalizationRegistry(() => {\n        this.automaticCleanup();\n      });\n    }\n\n    this._refCount = 0;\n    this.incRefCount(this._serverConfig.releaseOnDeref);\n\n    // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n    // will never trigger.\n    this._serverConfig.releaseOnDeref = undefined;\n    serverConfig.releaseOnDeref = undefined;\n\n    registerVersion(packageName, version, 'serverapp');\n  }\n\n  toJSON(): undefined {\n    return undefined;\n  }\n\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  // Increment the reference count of this server app. If an object is provided, register it\n  // with the finalization registry.\n  incRefCount(obj: object | undefined): void {\n    if (this.isDeleted) {\n      return;\n    }\n    this._refCount++;\n    if (obj !== undefined && this._finalizationRegistry !== null) {\n      this._finalizationRegistry.register(obj, this);\n    }\n  }\n\n  // Decrement the reference count.\n  decRefCount(): number {\n    if (this.isDeleted) {\n      return 0;\n    }\n    return --this._refCount;\n  }\n\n  // Invoked by the FinalizationRegistry callback to note that this app should go through its\n  // reference counts and delete itself if no reference count remain. The coordinating logic that\n  // handles this is in deleteApp(...).\n  private automaticCleanup(): void {\n    void deleteApp(this);\n  }\n\n  get settings(): FirebaseServerAppSettings {\n    this.checkDestroyed();\n    return this._serverConfig;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.SERVER_APP_DELETED);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport {\n  deepEqual,\n  getDefaultAppConfig,\n  isBrowser,\n  isWebWorker\n} from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser() && !isWebWorker()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\nimport { logger } from './logger';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (heartbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    try {\n      const platformLogger = this.container\n        .getProvider('platform-logger')\n        .getImmediate();\n\n      // This is the \"Firebase user agent\" string from the platform logger\n      // service, not the browser user agent.\n      const agent = platformLogger.getPlatformInfoString();\n      const date = getUTCDateString();\n      if (this._heartbeatsCache?.heartbeats == null) {\n        this._heartbeatsCache = await this._heartbeatsCachePromise;\n        // If we failed to construct a heartbeats cache, then return immediately.\n        if (this._heartbeatsCache?.heartbeats == null) {\n          return;\n        }\n      }\n      // Do not store a heartbeat if one is already stored for this day\n      // or if a header has already been sent today.\n      if (\n        this._heartbeatsCache.lastSentHeartbeatDate === date ||\n        this._heartbeatsCache.heartbeats.some(\n          singleDateHeartbeat => singleDateHeartbeat.date === date\n        )\n      ) {\n        return;\n      } else {\n        // There is no entry for this date. Create one.\n        this._heartbeatsCache.heartbeats.push({ date, agent });\n      }\n      // Remove entries older than 30 days.\n      this._heartbeatsCache.heartbeats =\n        this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\n          const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n          const now = Date.now();\n          return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n        });\n      return this._storage.overwrite(this._heartbeatsCache);\n    } catch (e) {\n      logger.warn(e);\n    }\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    try {\n      if (this._heartbeatsCache === null) {\n        await this._heartbeatsCachePromise;\n      }\n      // If it's still null or the array is empty, there is no data to send.\n      if (\n        this._heartbeatsCache?.heartbeats == null ||\n        this._heartbeatsCache.heartbeats.length === 0\n      ) {\n        return '';\n      }\n      const date = getUTCDateString();\n      // Extract as many heartbeats from the cache as will fit under the size limit.\n      const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n        this._heartbeatsCache.heartbeats\n      );\n      const headerString = base64urlEncodeWithoutPadding(\n        JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n      );\n      // Store last sent date to prevent another being logged/sent for the same day.\n      this._heartbeatsCache.lastSentHeartbeatDate = date;\n      if (unsentEntries.length > 0) {\n        // Store any unsent entries if they exist.\n        this._heartbeatsCache.heartbeats = unsentEntries;\n        // This seems more likely than emptying the array (below) to lead to some odd state\n        // since the cache isn't empty and this will be called again on the next request,\n        // and is probably safest if we await it.\n        await this._storage.overwrite(this._heartbeatsCache);\n      } else {\n        this._heartbeatsCache.heartbeats = [];\n        // Do not wait for this, to reduce latency.\n        void this._storage.overwrite(this._heartbeatsCache);\n      }\n      return headerString;\n    } catch (e) {\n      logger.warn(e);\n      return '';\n    }\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide multiple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/index.js\r\nimport './script.js';  // /script.js를 Webpack에 포함시켜 번들링\r\nimport './styles.css';\r\n\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCviaYW79vbuEzyLGlVP5OK8irS_yVHmxk\",\r\n     authDomain: \"nameage-ec0a2.firebaseapp.com\",\r\n    databaseURL: \"https://nameage-ec0a2-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n    projectId: \"nameage-ec0a2\",\r\n     storageBucket: \"nameage-ec0a2.firebasestorage.app\",\r\n    messagingSenderId: \"72793368901\",\r\n    appId: \"1:72793368901:web:55e93af625bf0c9193362c\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst database = getDatabase(app);\r\n\r\n"],"names":["SDK_VERSION","setSDKVersion","version","DOMStorageWrapper","domStorage_","_classCallCheck","prefix_","_createClass","key","value","set","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","message","i","arguments","length","arg","undefined","Array","isArray","_typeof","apply","logger","firstLog_","enableLogging$1","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","_len","varArgs","_key2","logWrapper","prefix","_len2","_key3","concat","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called","wrappedFn","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","_path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","_this","appCheck","getImmediate","optional","then","getToken","forceRefresh","_this2","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","_this3","auth_","onInit","auth","_this4","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_this5","_loop","toProcess","_loop2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","_this6","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","_this7","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","_len3","args","_key4","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","_len4","_key5","pN","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","enqueueSegment","pw","createElement","src","style","display","appendChild","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","write","_this8","alive","textContent","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","_this9","add","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","_this10","doNodeLongPoll","newScript","async","onload","onreadystatechange","rstate","parentNode","onerror","iframe","contentWindow","contentDocument","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","_this11","options","device","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","_this12","setInterval","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_iterator","_createForOfIteratorHelper","ALL_TRANSPORTS","_step","n","done","transport","err","globalTransportInitialized_","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","_this13","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","_this14","everConnected","onConnectionLost_","onSecondaryConnectionLost_","_this15","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","handshakePayload","Object","assign","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","_this16","closeConnections_","_this17","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","_toConsumableArray","_len5","_key6","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_EventEmitter","_this18","_callSuper","online_","isMobileCordova","_inherits","currentlyOnline","getInstance","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","_EventEmitter2","_this19","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","_ServerActions","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","_this20","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","Deferred","request","p","q","_queryObject","outstandingGet","index","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","_this21","_this22","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","tryAppCheck","_this23","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","_this24","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","_this25","queued","_this26","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","_this27","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","_establishConnection_","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this28","onDataMessage","onReady","_onDisconnect","canceled","connection","closeFn","sendRequestFn","_yield$Promise$all","_yield$Promise$all2","wrap","_callee$","_context","prev","next","nextConnectionId_","all","sent","_slicedToArray","interrupt","t0","stop","resume","isEmpty","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","values","_step2","_iterator2","queries","_iterator3","_step3","clientName","isReactNative","warnings","safeGet","indexSpec","getIndex","indexPath","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","_Index","isDefinedOn","assertionError","maxPost","makePost","indexValue","val","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","setMaxNode$1","setMaxNode","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","nodeFromJSON$1","MAX_NODE$1","setNodeFromJSON","PriorityIndex","_Index2","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","_this29","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","Default","MaxNode","_ChildrenNode","defineProperties","MAX","USE_HINZE","nodeFromJSON","json","jsonLeaf","children","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","childData","PathIndex","_Index3","indexPath_","_this30","extractChild","snap","aChild","bChild","valueNode","ValueIndex","_Index4","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","source","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","getStartPost","getEndPost","matches","isWithinStart","isWithinEnd","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","_this31","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","fullLimitUpdateChild_","inRange","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasLimit","hasAnchoredLimit","queryParamsGetNodeFilter","queryParams","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","_ServerActions2","_this32","listens_","_this33","listenId","getListenId_","thisListen","queryStringParameters","restRequest_","_this34","_this35","_ref","_ref2","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","_this36","reportedStats","haveStatsToReport","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","fromObject","childPath","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","viewProcessorCacheHasChild","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor$1","SyncPoint","views","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","_iterator5","_step4","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","_step5","_iterator6","_step5$value","viewQueryId","_repo","syncPointGetQueryViews","_iterator7","_step6","syncPointGetCompleteServerCache","_iterator8","_step7","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","_iterator9","_step8","referenceConstructor","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","maybeChildSyncPoint","childMap","completeView","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue","hasActualChild","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoGetValue","cached","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","repoOnDisconnectSet","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","_len6","_key7","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","_loop3","_i4","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","_loop4","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","charAt","_iterator10","_step9","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","call","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","getModularInstance","sameRepo","samePath","sameQueryIdentifier","toJSON","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","_QueryImpl","parentPath","DataSnapshot","_node","_index","childRef","exists","_this37","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thenablePushRef","pushRef","setPriority","callbackContext","container","ValueEventRegistration","_this38","ChildEventRegistration","eventToCheck","_this39","cancelCallbackOrListenOptions","onlyOnce","onceCallback","dataSnapshot","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_QueryConstraint","_value","_this40","_apply","endAt","QueryEndBeforeConstraint","_QueryConstraint2","_this41","endBefore","QueryStartAtConstraint","_QueryConstraint3","_this42","startAt","QueryStartAfterConstraint","_QueryConstraint4","_this43","startAfter","QueryLimitToFirstConstraint","_QueryConstraint5","_limit","_this44","limitToFirst","limit","QueryLimitToLastConstraint","_QueryConstraint6","_this45","limitToLast","QueryOrderByChildConstraint","_QueryConstraint7","_this46","parsedPath","orderByChild","QueryOrderByKeyConstraint","_QueryConstraint8","_this47","orderByKey","QueryOrderByPriorityConstraint","_QueryConstraint9","_this48","orderByPriority","QueryOrderByValueConstraint","_QueryConstraint10","_this49","orderByValue","QueryEqualToValueConstraint","_QueryConstraint11","_this50","equalTo","queryImpl","_len7","queryConstraints","_key8","_i10","_queryConstraints","constraint","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appName","appRepos","repoManagerForceRestClient","forceRestClient","_repoInternal","_instanceStarted","_rootInternal","_delete","apiName","checkTransportInit","IS_TRANSPORT_INITIALIZED","forceWebSockets","forceLongPolling","getDatabase","getApp","_getProvider","identifier","emulator","getDefaultEmulatorHostnameAndPort","connectDatabaseEmulator","mockUserToken","createMockUserToken","goOffline","goOnline","registerDatabase","variant","SDK_VERSION$1","_registerComponent","Component","_ref3","instanceIdentifier","getProvider","setMultipleInstances","registerVersion","SERVER_TIMESTAMP","serverTimestamp","increment","TransactionResult","committed","runTransaction","promiseComplete","prototype","simpleListen","echo","onEcho","hijackHash","newHash","oldPut","_initStandalone","_ref4","customAuthImpl","customAppCheckImpl","_ref4$nodeAdmin","componentContainer","ComponentContainer","Provider","setComponent","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assertion","stringToByteArray$1","out","charCodeAt","byteArrayToString","bytes","pos","c1","fromCharCode","c2","c3","c4","u","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","input","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","DecodeBase64StringError","_Error","_wrapNativeSuper","base64urlEncodeWithoutPadding","base64Decode","deepExtend","target","constructor","dateValue","prop","getGlobal","global","getDefaultsFromGlobal","__FIREBASE_DEFAULTS__","getDefaultsFromEnvVariable","defaultsJsonString","parse","getDefaultsFromCookie","cookie","decoded","getDefaults","info","getDefaultEmulatorHost","productName","_b","emulatorHosts","separatorIndex","lastIndexOf","getDefaultAppConfig","config","getExperimentalSetting","uid","header","alg","project","iat","sub","user_id","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","signature","getUA","isNode","forceEnvironment","isBrowser","isWebWorker","WorkerGlobalScope","isCloudflareWorker","isBrowserExtension","runtime","chrome","browser","isElectron","isIE","ua","isUWP","isSafari","includes","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","onsuccess","deleteDatabase","onupgradeneeded","areCookiesEnabled","cookieEnabled","ERROR_NAME","FirebaseError","_Error2","customData","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","PATTERN","_","decode","claims","parts","isValidTimestamp","validSince","validUntil","issuedAtTime","contextObj","deepEqual","aKeys","bKeys","_i","_aKeys","aProp","bProp","isObject","_i2","_bKeys","thing","promiseWithTimeout","timeInMS","deferredPromise","querystringParams","_Object$entries$_i","_Object$entries","_i3","arrayVal","querystringDecode","tokens","_token$split","_token$split2","extractQuerystring","queryStart","fragmentStart","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","W","lengthMinusBlock","inbuf","totalBits","createSubscribe","executor","onNoObservers","ObserverProxy","subscribe","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","nextOrObserver","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","sendOne","onError","methods","method","validateArgCount","minCount","maxCount","argCount","argError","argName","validateNamespace","validateCallback","validateContextObject","uuidv4","DEFAULT_INTERVAL_MILLIS","DEFAULT_BACKOFF_FACTOR","MAX_VALUE_MILLIS","RANDOM_FACTOR","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","randomWait","ordinal","isFinite","indicator","cent","dec","_delegate","getElementById","activateTab","sectionId","sections","querySelectorAll","section","classList","tabs","tab","activeTab","convertToKorean","conversionMap","initializeApp","firebaseConfig","apiKey","authDomain","storageBucket","messagingSenderId","searchTerm","trim","searchProducts","productsRef","productQuery","filteredProducts","product","updateSearchTable","products","tableBody","querySelector","innerHTML","noResultsRow","insertRow","cell","insertCell","colSpan","stockItem","row","stockAmount","neededAmount","PlatformLoggerServiceImpl","getPlatformInfoString","providers","getProviders","provider","isVersionServiceProvider","library","logString","component","getComponent","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","_defineProperty","name$q","name$p","name$n","name$o","name$l","name$m","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$1","name$2","_apps","_serverApps","_components","_addComponent","addComponent","debug","_addOrOverwriteComponent","addOrOverwriteComponent","componentName","serverApp","heartbeatController","triggerHeartbeat","_removeServiceInstance","clearInstance","_isFirebaseApp","_isFirebaseServerApp","settings","_clearComponents","ERRORS","_ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","FirebaseServerAppImpl","_FirebaseAppImpl","serverConfig","appImpl","_serverConfig","_finalizationRegistry","FinalizationRegistry","automaticCleanup","_refCount","incRefCount","releaseOnDeref","version$1","_assertThisInitialized","register","decRefCount","deleteApp","rawConfig","existingApp","newApp","initializeServerApp","_serverAppConfig","appOptions","nameObj","hashCode","reduce","imul","nameString","_iterator4","getApps","_x","_deleteApp","_callee7","cleanupProviders","firebaseServerApp","_callee7$","_context7","libraryKeyOrName","libraryMismatch","versionMismatch","warning","onLog","logCallback","setUserLogHandler","setLogLevel","setLogLevel$1","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","oldVersion","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","_callee8","tx","idbGetError","_callee8$","_context8","objectStore","computeKey","abrupt","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","_callee9","heartbeatObject","_callee9$","_context9","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_triggerHeartbeat","platformLogger","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","some","singleDateHeartbeat","hbTimestamp","valueOf","_getHeartbeatsHeader","_callee2","_extractHeartbeatsFor","heartbeatsToSend","unsentEntries","headerString","_callee2$","_context2","extractHeartbeatsForHeader","getHeartbeatsHeader","today","toISOString","heartbeatsCache","maxSize","heartbeatEntry","hb","dates","countBytes","_ret","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","_callee3","_callee3$","_context3","_read","_callee4","canUseIndexedDB","idbHeartbeatObject","_callee4$","_context4","_callee5","heartbeatsObject","existingHeartbeatsObject","_callee5$","_context5","_x5","_overwrite","_callee6","_callee6$","_context6","_x6","_add","registerCoreComponents","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setServiceProps","props","setInstanceCreatedCallback","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","isComponentEager","_step$value","instanceDeferred","services","INTERNAL","delete","_delete2","isComponentSet","getOptions","initialize","opts","_opts$options","_step2$value","normalizedDeferredIdentifier","existingCallbacks","existingInstance","invokeOnInitCallbacks","_ref$options","normalizeIdentifierForFactory","levelStringToEnum","DEBUG","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","_console","_logLevel","_logHandler","_userLogHandler","TypeError","level","inst","customLogLevel","userLogHandler","ignored","o","defineProperty","Symbol","asyncIterator","toStringTag","define","enumerable","configurable","writable","Generator","Context","makeInvokeMethod","tryCatch","l","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","__proto__","awrap","rval","handle","finish","_catch","delegateYield","asyncGeneratorStep","_next","_throw","w","replaceTraps","unwrap","blocked","blocking","terminated","openPromise","event","newVersion","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","storeName","_target","_args","store","oldTraps","_objectSpread","receiver","instanceOfAny","object","constructors","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","removeEventListener","cacheDonePromiseForTransaction","DOMException","idbProxyTraps","objectStoreNames","wrapFunction","storeNames","transformCachableValue","Proxy","IDBRequest","newValue","database"],"sourceRoot":""}